* Per-channel rate limiting instead of the current one-per-second globally
  - Where the bot is a mod, the limit is three per sec. In other channels, must respect slow mode.
  - Is there a way to detect channel slow mode on connection? If it changes, there's a NOTICE.
    - Possibly ROOMSTATE, but I'm not receiving those.
* Variables.
  - NOTE: As of 2021-01-13, all variables are stored in persist_status->variables->#chan->$var$
    and any that aren't dollar-bracketed are buggy. This may change in the future, with
    the persisted mapping NOT having the dollar signs.
* Add some example/template commands that use cooldowns.
  - The functionality exists, but it can be used in a variety of ways. Good examples:
    - Short cooldown, no else. A simple squelch effect (command can't be used inside
      fifteen seconds).
    - Long cooldown, 'else' has alternate message. Command gives you some actual benefit,
      and you can only use it once every hour.
    - Very short cooldown (2 seconds), 'else' adds to variable and has output with a two
      second delay that emits everything from the variable. Will batch up busy responses.
      - Would be perfect in a !!giveaway_ticket special, or anything where it's normal
        for lots of people to use it all at once.
  - And then there are the insane things that shouldn't clutter up the UI.
    - Attach event to !!cheer, !!sub, !!resub, !!subgift - ideally aliased
    - Send to !hypetrain. If {state} is not "idle", do nothing
    - Have five-minute timer on command
      - If command not on cooldown, keep silent
      - Else say "To start a hype train, we need just one more event within <time>"
    - Ideally, should stack the timeouts - each one starts an independent 5-min timer,
      and if any current timer is running, give the "else" message.
    - Can we recognize distinct people and ignore any doubled-up events?
    - This might require dedicated code. But it's fun to see how far we can go without.
* Across an update of connection.pike, retain the mod list, until such time as we get an
  updated list.
* Thank people for hosting (effectively a spam command triggered by a host notice)
  - Currently this is better done with Lisp Whispers, since distinguishing autohosts from
    explicit hosts requires authentication as the broadcaster.
* Pike HTTP, SSL, and keep-alive: what's going on? Is that why Chrome gets confused?
  - It's currently just disabled - we add "Connection: close" to all responses. Would
    be nice to figure out what's actually wrong and then reap the performance benefits.
* On the bot's emote list, allow search/filter by text
* Advanced timer functionality
  - If there's already a timer of this command happening, allow the user to pick whether it
    adds another independent one (current behaviour), restarts the timer (cancel existing
    and create new), or errors out with an immediate message of some sort.
  - Optionally emit message only if online at the time.
* Raid finder: Also show recent outgoing raids to allow notes to be added?
  - Or just "pick any channel, add notes". Have it show the stream as if in the raid finder.
  - The allfollows display could be this, but it's nondiscoverable and could be quite costly
    for people who follow a lot of people.
  - Adding ?raiders will show incoming, but not outgoing, raids.
* Move "$$autoform||$$" from markdown.html into each of the files that actually wants it
* Use persist_status->path("bcaster_token")[chan] for all need-more-auth calls
  - Use ensure_bcaster_login rather than ensure_login for the retention of scopes.
* Importing of config export files
  - Ignore the active flag but keep the allcmds flag?
  - Create all listed commands, but don't destroy unmentioned ones (overwrite any with
    the same name, of course). Ditto specials, but whitelist the names, of course.
  - Identify triggers by their IDs, and merge accordingly.
    - What happens if they're in a different order? This is currently the only plausible
      way to reorder triggers, which might be significant.
  - Update timezone if specified.
  - What about quotes??? How do we validate their format?
    - Hand each one, individually, to the updater from the front end??
* Allow dialogs to be dragged around??
  - May have some awkward interactions with (a) dialogs that resize themselves eg commands
    advanced view, (b) window resizes, and (c) closing and opening a dialog. Especially if
    it isn't obvious what's the same dialog and what's not.
* Is it possible to get a "recent messages" timeout? Would allow squishing of spam if the
  channel is too quiet. Might not be worth it though.
* Polish multi-voice.
  - This would allow the bot to see its own messages, but only if sent by a non-primary
    account.
  - Can this kind of auth be used to get host notifications??
* Authentication on Firefox may now have issues with the default popup blocker. Can we
  comply with normal "click for popup" expectations somehow?
* Enable/disable rewards - allow use of title, will do lookup
* Redemption triggers - specials?
* Create a way to daisychain into an existing command. This will allow a special to
  "alias" to a command, or for a command to do things and then chain.
  - What should happen with nested information eg from builtins?
  - Will this make StilleBot commands Turing-complete?
* If you attempt to rename a command or add an alias that already exists (and isn't an
  alias for the current command), warn on client side and block save unless confirmed.
* Tidy up demo mode a bit.
  - Some pages have mutely nonfunctional buttons - they should announce that it's a demo.
* Goal bar templates - nice easy ones that you can use right away
  - Note that Twitch now has on-platform goals that track current followers and subs,
    so this can continue to focus on how many have been gained recently (eg daily
    sub/resub count).
* Special trigger when any goal bar tiers up?? Would be better than the weird system
  where it triggers an actual command. Could deep link straight to the editor now.
* Find a good one-page PCRE syntax summary to link to
  - Make one.
  - Use `code` for regex, *em* or **strong** for example text
  - Aim it at people who don't know regex, but have front matter saying that it's PCRE
  - Web UI for PCRE tester that uses the exact same module as the server does?
* On creating a command with no text, place nothing in the GUI. Maybe disallow all "" ?
