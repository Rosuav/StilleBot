* Per-channel rate limiting instead of the current one-per-second globally
  - Where the bot is a mod, the limit is three per sec. In other channels, must respect slow mode.
  - Is there a way to detect channel slow mode on connection? If it changes, there's a NOTICE.
    - Possibly ROOMSTATE, but I'm not receiving those.
* Song request by search??? (eg "!songrequest blargh" to search Youtube for "blargh")
* !jackbox ABCD to put the code on screen
* Thank people for hosting (effectively a spam command triggered by a host notice)
  - Get the user ID of the channel
    - https://api.twitch.tv/helix/users?login=miccoelaine
  - Query currently-hosting channels
    - https://tmi.twitch.tv/hosts?include_logins=1&target=60299966
  - Compare periodically :( No notification.
  - To avoid alert spam, record names until the stream goes offline, even if they
    stop hosting? Or record a timestamp when they disappear?
  - What about autohosts? Want to avoid spam, again, but it can be nice to acknowledge.
* Pike HTTP, SSL, and keep-alive: what's going on? Is that why Chrome gets confused?
  - It's currently just disabled - we add "Connection: close" to all responses. Would
    be nice to figure out what's actually wrong and then reap the performance benefits.
* Add a Logout link (to /logout) to all pages when you're logged in
* Go through all the web config pages and add user() to any user-defined text
* Use the "special responses" system to customize texts like shoutouts? Would need a way
  to provide default text, and then explicitly removing it would mean "don't do this".
* Allow the bot's commands to be individually enabled and disabled for a particular channel
  using the web interface. Would be subordinate to the active_channels feature, which gives
  a hard restriction and would prevent the command from showing up for enabling if it's not
  one of the specified channels.
* On the bot's emote list, allow search/filter by text
* Allow commands to contain spaces. They cannot ever be invoked that way, but some commands
  could look for them, so for instance shoutout.pike could look for "!so someusername" and
  if found, use that text instead. (Thanks Mirror for the idea!)
* Advanced timer functionality
  - If there's already a timer of this command happening, allow the user to pick whether it
    adds another independent one (current behaviour), restarts the timer (cancel existing
    and create new), or errors out with an immediate message of some sort.
  - Optionally emit message only if online at the time.
-* Websockets on SSL are causing noisy failures on disconnect - possible Pike limitation?
* Clean up the autoform handling
  - Currently, all Markdown pages get a <form> even if they don't need it
  - This can be overridden, but that's backwards
  - Have a convenient way to say "this function takes both GET and POST requests", which
    will then also trigger autoform handling, the save_or_login, and maybe ensure_session
    on POST? Or some sort of login validation. Maybe check for mod status.
  - This might also be a good place to clean up the backlink handling
